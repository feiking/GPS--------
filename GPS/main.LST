C51 COMPILER V9.00   MAIN                                                                  05/07/2014 12:39:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: e:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include "GPS.h"
   5          #include "LCD.h"
   6          #include "display.h"
   7          
   8          sbit Key = P3^7;
   9          
  10          char   xdata rev_buf[80];        //接收缓存     
  11          uchar  xdata rev_start = 0;     //接收开始标志      
  12          uchar  xdata rev_stop  = 0;     //接收停止标志     
  13          uchar  xdata gps_flag = 0;      //GPS处理标志    
  14            
  15          uchar  xdata num = 0;          
  16          uchar Flag_dis = 1;
  17          extern GPS_INFO   GPS;  //在display.c中定义，使用时要加extern
  18          
  19          
  20          void Uart_Init(void)
  21          {
  22   1              TMOD = 0x21;//定时器1
  23   1              PCON = 0x00;//波特率不加倍
  24   1              SCON = 0x50;//串行工作方式1允许串行接收
  25   1              TH1 = 0xfd; //晶振11.0592 ，选择波特率9600
  26   1              TL1 = 0xfd;
  27   1              EA = 1;
  28   1              ES = 1; //串行中断开启
  29   1              TR1 = 1;        
  30   1      }
  31          
  32          /****************************************
  33          主函数  
  34          /****************************************/
  35          void main(void)
  36          {
  37   1              uchar error_num = 0;
  38   1              Lcd_Init();       //初始化LCD   
  39   1              Uart_Init();  //初始化串口
  40   1              GPS_Init();   //初始化GPS     
  41   1              rev_stop=0;
  42   1              while(1)
  43   1              {
  44   2                      if (rev_stop)   //如果接收完一行         
  45   2                      {
  46   3                              
  47   3                         if(Key == 0)
  48   3                         {
  49   4                                      while(!Key);
  50   4                                      Flag_dis ++;
  51   4                                      if(Flag_dis == 4)
  52   4                                      Flag_dis = 1;           
  53   4                         }  
  54   3                         switch(Flag_dis)
  55   3                         {
C51 COMPILER V9.00   MAIN                                                                  05/07/2014 12:39:43 PAGE 2   

  56   4                                      case 1:
  57   4                                      {
  58   5                                              if (GPS_RMC_Parse(rev_buf, &GPS))  //解析GPRMC      
  59   5                                              {
  60   6                                              
  61   6                                                      GPS_DisplayOne();  //显示第一页信息
  62   6                                                      error_num = 0;
  63   6                                                      gps_flag = 0;
  64   6                                                      rev_stop  = 0;
  65   6                                                      
  66   6                                              }
  67   5                                              else
  68   5                                              {
  69   6                                                      error_num++;
  70   6                                                      if (error_num >= 20) //如果数据无效超过20次               
  71   6                                                      {
  72   7                                                              
  73   7                                                              error_num = 20;
  74   7                                                              clr_screen();
  75   7                                                              GPS_Init();     //返回初始化            
  76   7                                                      }
  77   6                                                      gps_flag = 0;
  78   6                                                      rev_stop  = 0;
  79   6                                                      
  80   6                                              }
  81   5                                      };break;
  82   4                                      case 2:
  83   4                                      {
  84   5                                              
  85   5                                              if (GPS_RMC_Parse(rev_buf, &GPS)) //解析GPRMC         
  86   5                                              {                                               
  87   6                                                      GPS_DisplayTwo();         //显示GPS第二页信息          
  88   6                                                      error_num = 0;
  89   6                                                      gps_flag = 0;
  90   6                                                      rev_stop  = 0;                                                  
  91   6                                              }
  92   5                                              else
  93   5                                              {
  94   6                                                      error_num++;
  95   6                                                      if (error_num >= 20) //如果数据无效超过20次               
  96   6                                                      {
  97   7                                                              
  98   7                                                              error_num = 20;
  99   7                                                              clr_screen();
 100   7                                                              GPS_Init();     //返回初始化          
 101   7                                                      }
 102   6                                                      gps_flag = 0;
 103   6                                                      rev_stop  = 0;                                          
 104   6                                              }
 105   5                                              
 106   5                                      };break;
 107   4      
 108   4                                      case 3:
 109   4                                      {
 110   5                                              if (GPS_GGA_Parse(rev_buf, &GPS)) //解析GPGGA         
 111   5                                              {                                               
 112   6                                                      GPS_DisplayThree();       //显示GPS第三页信息          
 113   6                                                      error_num = 0;
 114   6                                                      gps_flag = 0;
 115   6                                                      rev_stop  = 0;                                                  
 116   6                                              }
 117   5                                              else
C51 COMPILER V9.00   MAIN                                                                  05/07/2014 12:39:43 PAGE 3   

 118   5                                              {
 119   6                                                      error_num++;
 120   6                                                      if (error_num >= 20) //如果数据无效超过20次               
 121   6                                                      {
 122   7                                                              
 123   7                                                              error_num = 20;
 124   7                                                              clr_screen();
 125   7                                                              GPS_Init();     //返回初始化          
 126   7                                                      }
 127   6                                                      gps_flag = 0;
 128   6                                                      rev_stop  = 0;                                          
 129   6                                              }
 130   5                                              if (GPS_GSV_Parse(rev_buf, &GPS)) //解析GPGSV         
 131   5                                              {                                       
 132   6                                                      GPS_DisplayFour();        //显示GPS第三页信息          
 133   6                                                      error_num = 0;
 134   6                                                      gps_flag = 0;
 135   6                                                      rev_stop  = 0;                                                  
 136   6                                              }
 137   5                                              else
 138   5                                              {
 139   6                                                      error_num++;
 140   6                                                      if (error_num >= 20) //如果数据无效超过20次               
 141   6                                                      {
 142   7                                                              
 143   7                                                              error_num = 20;
 144   7                                                              clr_screen();
 145   7                                                              GPS_Init();     //返回初始化          
 146   7                                                      }
 147   6                                                      gps_flag = 0;
 148   6                                                      rev_stop  = 0;                                          
 149   6                                              }                                       
 150   5                                      };break;
 151   4                         }
 152   3                      }
 153   2              }
 154   1      }
 155          /****************************************/
 156          /*串口中断函数接收GPS发来的数据，并存到缓冲区 rev_buf[]
 157          发送的数据流
 158          $GPGSV,2,2,06,20,44,057,41,27,08,288,33*75
 159          $GPGLL,3157.64696,N,11850.54907,E,112056.00,A,A*61
 160          $GPRMC,112057.00,A,3157.64695,N,11850.54908,E,0.170,,240712,,,A*71
 161          $GPVTG,,T,,M,0.170,N,0.315,K,A*22
 162          $GPGGA,112057.00,3157.64695,N,11850.54908,E,1,05,4.10,33.1,M,2.6,M,,*5C
 163          $GPGSA,A,3,17,20,04,27,09,,,,,,,,4.79,4.10,2.47*00
 164          $GPGSV,2,1,06,04,48,271,41,09,06,298,34,11,,,26,17,64,002,40*48
 165          */
 166          /****************************************/
 167          
 168          void Uart_Receive(void) interrupt 4
 169          {
 170   1              uchar ch;
 171   1              ES = 0;
 172   1              if (RI)
 173   1              {
 174   2                      ch = SBUF;     
 175   2                      if ((ch == '$') && (gps_flag == 0))  //如果收到字符'$'，便开始接收           
 176   2                      {
 177   3                              rev_start = 1;
 178   3                              rev_stop  = 0;
 179   3                      }
C51 COMPILER V9.00   MAIN                                                                  05/07/2014 12:39:43 PAGE 4   

 180   2              
 181   2                      if (rev_start == 1)  //标志位为1，开始接收            
 182   2                      {
 183   3                              rev_buf[num++] = ch;  //字符存到数组中           
 184   3                              if (ch == '\n')     //如果接收到换行           
 185   3                              {
 186   4                                      rev_buf[num] = '\0';
 187   4                                      rev_start = 0;
 188   4                                      rev_stop  = 1;
 189   4                                      gps_flag = 1;
 190   4                                      num = 0;
 191   4                              }
 192   3                      }
 193   2              }
 194   1              RI = 0;  //RI清0，重新接收            
 195   1              ES = 1; 
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     84    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
